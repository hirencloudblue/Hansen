apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cs-data-management.fullname" . }}
  labels:
    {{- include "cs-data-management.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cs-data-management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cs-data-management.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cs-data-management.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_JAEGER_AGENT_PORT
              value: "{{ .Values.environment.Jaeger.AgentPort }}"
          ports:
            - name: http
              containerPort: {{ .Values.deployment.containerPort }}
              protocol: TCP
          volumeMounts:
            - mountPath: "/data"
              name: {{ .Values.environment.volumeName }}
            - mountPath: "/app/appsettings.json"
              name: appsettings
              subPath: appsettings.json
            - mountPath: /tmp
              name: tmp-vol
              readOnly: false
            - mountPath: /app/PersistedVars
              name: tmp-vol
              readOnly: false
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ .Values.environment.volumeName }}
        persistentVolumeClaim:
          claimName: {{ .Values.environment.volumePvcName }}
      - name: appsettings
        configMap:
          name: appsettings-configmap-{{ .Release.Name }}
      - emptyDir:
          medium: Memory
        name: tmp-vol